JWT - JSON Web Token - Это JSON обьект который хранит данные об аутентификации пользователя. 
                       Этот токен создается на сервере шифруя какие-то данные и
                       подписывает их специальным секретным ключом.
Для JWT токена обязательно иметь данные для шифровки (payload) и подпись/ключ (signature)

npm i jsonwebtoken @types/jsonwebtoken

{token:"seiuwbegiu"} 

Для записи cookie на стороне сервера клиенту у обьекта res используется метод cookie,
1-ым аргументом принимает ключ для данных, а 2-ым - значение. 
(Отправляется заголовок Set-Cookie, при обнаружении которого браузер сохраняет переданный cookie)

Для получения данных из cookie на стороне сервера - используется обьект req и его свойство 'cookies',
который является обьектом

Middleware - промежуточный обработчик. Функция,
которая выполняется до самого обработчика запроса (в нашем случе контроллера)
функция middleware'a принимает req, res, next (следующий мидлвар/обработчик в цепочке)

К примеру в express есть встроенный middleware - express.json(),
который парсит тело запроса из json в обычный js обьект, именно благодаря нему мы работам с req.body как с обьектом

Так же как и с json'ом для парсинга cookie требуется использовать middleware,
из сторонней библиотеки: cookie-parser: 'npm i cookie-parser'.
! При использовании ts нужно скачать типы:
    'npm i @types/cookie-parser'

(╹ڡ╹ )

(⌐■_■)

( •̀ .̫ •́ )✧

Generic-тип - універсальний тип, який приймає різні типи. При цьому зберігаються переваги типізації.